#include <linux/module.h>
#include <linux/init.h>
#include <linux/sched.h>
#include <linux/sched/signal.h>

static int __init skeleton_init(void) {
    struct task_struct* curr,*t;
    int nr_proc = 0;
    int running = 0;
    int sleeping = 0;
    int nr_threads = 0;
    char proc_state;
    pr_info("[*] loaded debug module\n");
    if(likely(in_task())) {
	    for_each_process(curr) {
		    nr_proc++;
		    proc_state = task_state_to_char(curr);
		    switch(proc_state) {
			    case 'R':
				    running++;
			    	    break;
			    case 'S':
				    sleeping++;
			    	    break;
	                    case 'I':
				    sleeping++;
				    break;
		     }


		}
	}
    }	
	
	
	pr_info("tasks: [%d] threads: [%d] running: [%d] sleeping: [%d]\n",nr_proc,nr_threads,running,sleeping);
    return 0;
}

static void __exit skeleton_exit(void) {
    pr_info("[*] unloaded debug module\n");
  
}

module_init(skeleton_init);
module_exit(skeleton_exit);


MODULE_LICENSE("GPL");
